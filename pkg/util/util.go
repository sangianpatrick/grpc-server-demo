package util

import "time"

// TimezoneAsiaJakarta timezone name
const TimezoneAsiaJakarta = "Asia/Jakarta"

// TimezoneUTC timezone name
const TimezoneUTC = "UTC"

// ISOFormat is a date format that generated by Javascript engine, which means it includes the millisecond,
// it is a little bit different to "RFC3339" format that ignore the millisecond.
const ISOFormat = "2006-01-02T15:04:05.000Z07:00"

// MySQLFormat is date with mysql format
const MySQLFormat = "2006-01-02 15:04:05.000"

// ToISODate returns date with ISO string format based on location time zone.
// But returns error if location time zone is not a standard.
//
// Example of return:
//
// When the location is "UTC", it will return "2006-01-02T08:04:05.000Z", but if the location is "Asia/Jakarta",
// it will return "2006-01-02T15:04:05.000+07:00".
func ToISODate(t time.Time, loc string) (string, error) {
	location, err := time.LoadLocation(loc)
	if err != nil {
		return "", err
	}
	isoString := t.In(location).Format(ISOFormat)
	return isoString, nil
}

// ToMySQLDate parse date to mysql format
func ToMySQLDate(t time.Time, loc string) (string, error) {
	location, err := time.LoadLocation(loc)
	if err != nil {
		return "", err
	}
	isoString := t.In(location).Format(MySQLFormat)
	return isoString, nil
}
